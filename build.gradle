buildscript {
    ext.kotlin_version = '2.0.0'
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.essential.gg/repository/maven-public' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.1.+'
        classpath 'org.jsoup:jsoup:1.14.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "6.0.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

group = 'fr.epyi.metropiamod'
version = '1.16.5-1.0'
archivesBaseName = 'metropiamod'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println("Java: ${System.getProperty('java.version')} JVM: ${System.getProperty('java.vm.version')}(${System.getProperty('java.vendor')}) Arch: ${System.getProperty('os.arch')}")

minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                metropiamod {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                metropiamod {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'metropiamod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                metropiamod {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://repo.essential.gg/repository/maven-public' }
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'
    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'gg.essential:elementa-1.16.2-forge:649'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

shadowJar {
    archiveClassifier.set(null)
}

jar {
    manifest {
        attributes(
                'Specification-Title': 'metropiamod',
                'Specification-Vendor': 'metropiamodsareus',
                'Specification-Version': '1',
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Implementation-Vendor': 'metropiamodsareus',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        )
    }
}

jar.finalizedBy('reobfJar').configure { dependsOn(tasks.named("shadowJar")) }

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
